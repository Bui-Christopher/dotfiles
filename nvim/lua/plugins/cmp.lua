-- -- Autocompletion
-- return {
--     "hrsh7th/nvim-cmp",
--     version = false, -- last release is way too old
--     event = "InsertEnter",
--     -- event = "BufReadPre",
--     dependencies = {
--         "hrsh7th/cmp-nvim-lsp",
--         "hrsh7th/cmp-buffer",
--         "hrsh7th/cmp-path",
--         "hrsh7th/cmp-cmdline",
--         "saadparwaiz1/cmp_luasnip",
--         --   "rafamadriz/friendly-snippets",
--     },
--     opts = function()
--         vim.api.nvim_set_hl(0, "CmpGhostText", { link = "Comment", default = true })
--         local cmp = require("cmp")
--         local defaults = require("cmp.config.default")()
--         return {
--             completion = {
--                 completeopt = "menu,menuone,noinsert",
--             },
--             snippet = {
--                 expand = function(args)
--                     require("luasnip").lsp_expand(args.body)
--                 end,
--             },
--             mapping = cmp.mapping.preset.insert({
--                 ["<Tab>"] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Insert }),
--                 ["<S-Tab>"] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Insert }),
--                 ["<C-d>"] = cmp.mapping.scroll_docs(-4),
--                 ["<C-f>"] = cmp.mapping.scroll_docs(4),
--                 ["<C-Space>"] = cmp.mapping.complete(),
--                 ["<C-e>"] = cmp.mapping.abort(),
--                 ["<CR>"] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
--                 ["<S-CR>"] = cmp.mapping.confirm({
--                     behavior = cmp.ConfirmBehavior.Replace,
--                     select = true,
--                 }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
--                 ["<C-CR>"] = function(fallback)
--                     cmp.abort()
--                     fallback()
--                 end,
--             }),
--             -- TODO: Is this order of sources preferred?
--             sources = cmp.config.sources({
--                 { name = "nvim_lsp" },
--                 { name = "buffer" },
--                 { name = "path" },
--             }, {
--                 { name = "luasnip" },
--             }),
--             formatting = {
--                 format = function(_, item)
--                     local icons = require("utils").lsp_kinds
--                     if icons[item.kind] then
--                         item.kind = icons[item.kind] .. item.kind
--                     end
--                     return item
--                 end,
--             },
--             experimental = {
--                 ghost_text = {
--                     hl_group = "CmpGhostText",
--                 },
--             },
--             sorting = defaults.sorting,
--         }
--     end,
--     config = function(_, opts)
--         for _, source in ipairs(opts.sources) do
--             source.group_index = source.group_index or 1
--         end
--         require("cmp").setup(opts)
--     end,
-- }
return {}
